AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'todo-app

  Sample SAM Template for todo-app

  '
Globals:
  Function:
    Timeout: 5
Resources:
  TodoAppFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Architectures:
      - x86_64
      Policies: AmazonDynamoDBFullAccess
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref ApiGatewayApi  # 暗黙的なAPIには注意
            Auth:
              Authorizer: CognitoAuthorizer
      Environment:
        Variables:
          DYNAMODB_ENDPOINT: ""
      ImageUri: todoappfunction:go1.x-v1
    Metadata:
      DockerContext: ./todo-app
      DockerTag: go1.x-v1
      Dockerfile: Dockerfile.production
      SamResourceId: TodoAppFunction

  ApiGatewayApi:
    DependsOn: UserPool
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !GetAtt "UserPool.Arn"
      Domain:
        DomainName: ueda-todo-app.sandbox.yumemi.io
        CertificateArn: !Ref CertificateArn
        EndpointConfiguration: EDGE
        Route53:
          HostedZoneId: !Ref HostedZoneId

  TodoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Todo
      AttributeDefinitions:
      - AttributeName: ID
        AttributeType: N
      KeySchema:
      - AttributeName: ID
        KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  SequenceTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Sequences
      AttributeDefinitions:
      - AttributeName: Name
        AttributeType: S
      KeySchema:
      - AttributeName: Name
        KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  UserPool:
     Type: AWS::Cognito::UserPool
     Properties:
         AdminCreateUserConfig:
          AllowAdminCreateUserOnly: false
         UserPoolName: TestingUsers
         UsernameAttributes:
          - email
         AutoVerifiedAttributes:
          - email
         Policies:
          PasswordPolicy:
             MinimumLength: 6
             RequireLowercase: false
             RequireNumbers: false
             RequireSymbols: false
             RequireUppercase: false

  UserPoolTokenClient:
     Type: AWS::Cognito::UserPoolClient
     Properties:
       UserPoolId: !Ref UserPool
       GenerateSecret: false
       ExplicitAuthFlows:
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH

  UserPoolUser:
     Type: AWS::Cognito::UserPoolUser
     Properties:
       DesiredDeliveryMediums:
         - EMAIL
       Username: !Ref YourEmail
       UserPoolId: !Ref UserPool

  WebACLAssociationWithApiGateway:
    Type: AWS::WAFv2::WebACLAssociation
    Properties:
      ResourceArn: !Sub
        - arn:aws:apigateway:ap-northeast-1::/restapis/${ApiGatewayID}/stages/Prod
        - ApiGatewayID: !Ref ApiGatewayApi
      WebACLArn: !GetAtt "WebACLForApiGateway.Arn"

  WebACLForApiGateway:
    Type: AWS::WAFv2::WebACL
    Properties:
      Name: "WebACLForApiGateway"
      Scope: REGIONAL
      DefaultAction:
        Block: {}
      Rules:
      - Name: "AllowIPRule"
        Action:
          Allow: {}
        Priority: 1
        Statement:
          IPSetReferenceStatement:
            Arn : !GetAtt AllowIPSet.Arn
        VisibilityConfig:
          CloudWatchMetricsEnabled: true
          SampledRequestsEnabled: false
          MetricName: WebACLRuleIPSetMetric
      VisibilityConfig:
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: false
        MetricName: WebACLMetric

  AllowIPSet:
    Type: "AWS::WAFv2::IPSet"
    Properties:
      Name: "VPNIPSet"
      Scope: "REGIONAL"
      IPAddressVersion: IPV4
      Addresses:
        - 52.192.209.10/32

Parameters:
  YourEmail:
    Type: String
  CertificateArn:
    Type: String
  HostedZoneId:
    Type: String

Outputs:
  UserPool:
    Description: "User pool ID"
    Value: !Ref UserPool
  UserPoolTokenClient:
    Description: "User pool client ID"
    Value: !Ref UserPoolTokenClient
